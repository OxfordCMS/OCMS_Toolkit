name: Validate PR Labels

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

jobs:
  validate-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR labels
        id: pr_labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
            return labels.data.map(label => label.name);

      - name: Validate labels
        id: validate
        env:
          PR_LABELS: ${{ steps.pr_labels.outputs.result }}
        run: |
          echo "PR Labels: $PR_LABELS"
          # Count how many of major, minor, patch labels present
          count=$(echo "$PR_LABELS" | jq '[.[] | select(. == "patch" or . == "minor" or . == "major")] | length')

          echo "Found $count special label(s)"

          if [ "$count" -eq 1 ]; then
            echo "✅ Exactly one valid label found."
            echo "validation_passed=true" >> "$GITHUB_OUTPUT"
          else
            echo "❌ PR must have exactly one of: patch, minor, or major."
            exit 1
          fi

      - name: Trigger tag_on_merge workflow
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const workflow_id = "tag_on_merge.yml";
            const ref = context.payload.pull_request.head.ref;

            console.log(`Triggering workflow ${workflow_id} on branch ${ref}`);
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner,
                repo,
                workflow_id,
                ref
              });
              console.log("✅ Workflow dispatched successfully");
            } catch (error) {
              console.log("Note: Workflow dispatch may not be available for this branch. This is expected for PR branches.");
              console.log(`Error: ${error.message}`);
            }